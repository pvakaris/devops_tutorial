{
  "info": {
    "_postman_id": "2c93dd90-6931-43af-8565-6737d55af585",
    "name": "devops_tutorial",
    "description": "Swagger tutorial",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "3889785"
  },
  "item": [
    {
      "name": "student",
      "item": [
        {
          "name": "1.Add a new student",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "tests[\"Response should not be 'do some magic!'\"] = responseBody != \"do some magic!\";",
                  "// pm.globals.set(\"student_id\", responseBody);",
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"student_id\", jsonData);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "function random_string(size){",
                  "    var str = \"\";",
                  "    for (var i = 0; i < size; i++){",
                  "        str += random_character();",
                  "    }",
                  "    return str;",
                  "}",
                  "function random_character() {",
                  "    var chars = \"0123456789abcdefghijklmnopqurstuvwxyzABCDEFGHIJKLMNOPQURSTUVWXYZ\";",
                  "    return chars.substr( Math.floor(Math.random() * 62), 1);",
                  "}",
                  "",
                  "",
                  "var first_name = random_string(20);",
                  "var last_name = random_string(20);",
                  "",
                  "postman.setEnvironmentVariable(\"first_name\", first_name);",
                  "postman.setEnvironmentVariable(\"last_name\", last_name);",
                  "",
                  "",
                  "var start = new Date().getTime();",
                  "postman.setEnvironmentVariable(\"start_time\", start);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"first_name\": \"{{first_name}}\",\n    \"last_name\": \"{{last_name}}\",\n    \"grade_records\": [\n        {\n            \"subject_name\": \"{{subject_name_1}}\",\n            \"grade\": {{grade_1}}\n        },\n        {\n            \"subject_name\": \"{{subject_name_2}}\",\n            \"grade\": {{grade_2}}\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/student",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "student"
              ]
            }
          },
          "response": [
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"student_id\": 0,\n    \"last_name\": \"last_name\",\n    \"grades\": {\n        \"key\": \"grades\"\n    },\n    \"first_name\": \"first_name\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/student",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "\"<string>\""
            },
            {
              "name": "Invalid input",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"student_id\": 0,\n    \"last_name\": \"last_name\",\n    \"grades\": {\n        \"key\": \"grades\"\n    },\n    \"first_name\": \"first_name\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/student",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student"
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "2.Find student by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "console.log(responseBody)"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/student/{{student_id}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "student",
                "{{student_id}}"
              ]
            },
            "description": "Returns a single student"
          },
          "response": [
            {
              "name": "student not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/student/:student_id?subject=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student",
                    ":student_id"
                  ],
                  "query": [
                    {
                      "key": "subject",
                      "value": "<string>"
                    }
                  ],
                  "variable": [
                    {
                      "key": "student_id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/student/:student_id?subject=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student",
                    ":student_id"
                  ],
                  "query": [
                    {
                      "key": "subject",
                      "value": "<string>"
                    }
                  ],
                  "variable": [
                    {
                      "key": "student_id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"student_id\": 0,\n \"last_name\": \"last_name\",\n \"grades\": {\n  \"key\": \"grades\"\n },\n \"first_name\": \"first_name\"\n}"
            },
            {
              "name": "Invalid ID supplied",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/student/:student_id?subject=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student",
                    ":student_id"
                  ],
                  "query": [
                    {
                      "key": "subject",
                      "value": "<string>"
                    }
                  ],
                  "variable": [
                    {
                      "key": "student_id"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "3.Find student by wrong ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/student/000000000000000000000000",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "student",
                "000000000000000000000000"
              ]
            },
            "description": "Returns a single student"
          },
          "response": [
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/student/:student_id?subject=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student",
                    ":student_id"
                  ],
                  "query": [
                    {
                      "key": "subject",
                      "value": "<string>"
                    }
                  ],
                  "variable": [
                    {
                      "key": "student_id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"student_id\": 0,\n \"last_name\": \"last_name\",\n \"grades\": {\n  \"key\": \"grades\"\n },\n \"first_name\": \"first_name\"\n}"
            },
            {
              "name": "Invalid ID supplied",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/student/:student_id?subject=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student",
                    ":student_id"
                  ],
                  "query": [
                    {
                      "key": "subject",
                      "value": "<string>"
                    }
                  ],
                  "variable": [
                    {
                      "key": "student_id"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "student not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/student/:student_id?subject=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student",
                    ":student_id"
                  ],
                  "query": [
                    {
                      "key": "subject",
                      "value": "<string>"
                    }
                  ],
                  "variable": [
                    {
                      "key": "student_id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "4.delete student",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/student/{{student_id}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "student",
                "{{student_id}}"
              ]
            }
          },
          "response": [
            {
              "name": "Invalid ID supplied",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/student/:student_id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student",
                    ":student_id"
                  ],
                  "variable": [
                    {
                      "key": "student_id"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/student/:student_id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student",
                    ":student_id"
                  ],
                  "variable": [
                    {
                      "key": "student_id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"student_id\": 0,\n \"last_name\": \"last_name\",\n \"grades\": {\n  \"key\": \"grades\"\n },\n \"first_name\": \"first_name\"\n}"
            },
            {
              "name": "student not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/student/:student_id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student",
                    ":student_id"
                  ],
                  "variable": [
                    {
                      "key": "student_id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "5.delete non existing student",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/student/{{student_id}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "student",
                "{{student_id}}"
              ]
            }
          },
          "response": [
            {
              "name": "student not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/student/:student_id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student",
                    ":student_id"
                  ],
                  "variable": [
                    {
                      "key": "student_id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Invalid ID supplied",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/student/:student_id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student",
                    ":student_id"
                  ],
                  "variable": [
                    {
                      "key": "student_id"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/student/:student_id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student",
                    ":student_id"
                  ],
                  "variable": [
                    {
                      "key": "student_id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"student_id\": 0,\n \"last_name\": \"last_name\",\n \"grades\": {\n  \"key\": \"grades\"\n },\n \"first_name\": \"first_name\"\n}"
            }
          ]
        },
        {
          "name": "6.Add a new student with only first name",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "function random_string(size){",
                  "    var str = \"\";",
                  "    for (var i = 0; i < size; i++){",
                  "        str += random_character();",
                  "    }",
                  "    return str;",
                  "}",
                  "function random_character() {",
                  "    var chars = \"0123456789abcdefghijklmnopqurstuvwxyzABCDEFGHIJKLMNOPQURSTUVWXYZ\";",
                  "    return chars.substr( Math.floor(Math.random() * 62), 1);",
                  "}",
                  "",
                  "",
                  "var first_name = random_string(20);",
                  "var last_name = random_string(20);",
                  "",
                  "postman.setEnvironmentVariable(\"first_name\", first_name);",
                  "postman.setEnvironmentVariable(\"last_name\", last_name);",
                  "",
                  "",
                  "var start = new Date().getTime();",
                  "postman.setEnvironmentVariable(\"start_time\", start);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"first_name\": \"{{first_name}}\",\n    \"grade_records\": [\n        {\n            \"subject_name\": \"{{subject_name_1}}\",\n            \"grade\": {{grade_1}}\n        },\n        {\n            \"subject_name\": \"{{subject_name_2}}\",\n            \"grade\": {{grade_2}}\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/student",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "student"
              ]
            }
          },
          "response": [
            {
              "name": "Invalid input",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"student_id\": 0,\n    \"last_name\": \"last_name\",\n    \"grades\": {\n        \"key\": \"grades\"\n    },\n    \"first_name\": \"first_name\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/student",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student"
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"student_id\": 0,\n    \"last_name\": \"last_name\",\n    \"grades\": {\n        \"key\": \"grades\"\n    },\n    \"first_name\": \"first_name\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/student",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "\"<string>\""
            }
          ]
        },
        {
          "name": "7.Add a new student with only last name",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "function random_string(size){",
                  "    var str = \"\";",
                  "    for (var i = 0; i < size; i++){",
                  "        str += random_character();",
                  "    }",
                  "    return str;",
                  "}",
                  "function random_character() {",
                  "    var chars = \"0123456789abcdefghijklmnopqurstuvwxyzABCDEFGHIJKLMNOPQURSTUVWXYZ\";",
                  "    return chars.substr( Math.floor(Math.random() * 62), 1);",
                  "}",
                  "",
                  "",
                  "var first_name = random_string(20);",
                  "var last_name = random_string(20);",
                  "",
                  "postman.setEnvironmentVariable(\"first_name\", first_name);",
                  "postman.setEnvironmentVariable(\"last_name\", last_name);",
                  "",
                  "",
                  "var start = new Date().getTime();",
                  "postman.setEnvironmentVariable(\"start_time\", start);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"last_name\": \"{{last_name}}\",\n    \"grade_records\": [\n        {\n            \"subject_name\": \"{{subject_name_1}}\",\n            \"grade\": {{grade_1}}\n        },\n        {\n            \"subject_name\": \"{{subject_name_2}}\",\n            \"grade\": {{grade_2}}\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/student",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "student"
              ]
            }
          },
          "response": [
            {
              "name": "Invalid input",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"student_id\": 0,\n    \"last_name\": \"last_name\",\n    \"grades\": {\n        \"key\": \"grades\"\n    },\n    \"first_name\": \"first_name\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/student",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student"
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"student_id\": 0,\n    \"last_name\": \"last_name\",\n    \"grades\": {\n        \"key\": \"grades\"\n    },\n    \"first_name\": \"first_name\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/student",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "\"<string>\""
            }
          ]
        },
        {
          "name": "8.Add a new student without subject",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "function random_string(size){",
                  "    var str = \"\";",
                  "    for (var i = 0; i < size; i++){",
                  "        str += random_character();",
                  "    }",
                  "    return str;",
                  "}",
                  "function random_character() {",
                  "    var chars = \"0123456789abcdefghijklmnopqurstuvwxyzABCDEFGHIJKLMNOPQURSTUVWXYZ\";",
                  "    return chars.substr( Math.floor(Math.random() * 62), 1);",
                  "}",
                  "",
                  "",
                  "var first_name = random_string(20);",
                  "var last_name = random_string(20);",
                  "",
                  "postman.setEnvironmentVariable(\"first_name\", first_name);",
                  "postman.setEnvironmentVariable(\"last_name\", last_name);",
                  "",
                  "",
                  "var start = new Date().getTime();",
                  "postman.setEnvironmentVariable(\"start_time\", start);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"first_name\": \"{{first_name}}\",\n    \"last_name\": \"{{last_name}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/student",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "student"
              ]
            }
          },
          "response": [
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"student_id\": 0,\n    \"last_name\": \"last_name\",\n    \"grades\": {\n        \"key\": \"grades\"\n    },\n    \"first_name\": \"first_name\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/student",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "\"<string>\""
            },
            {
              "name": "Invalid input",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"student_id\": 0,\n    \"last_name\": \"last_name\",\n    \"grades\": {\n        \"key\": \"grades\"\n    },\n    \"first_name\": \"first_name\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/student",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student"
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "9.Add a new random student",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "function random_string(size){",
                  "    var str = \"\";",
                  "    for (var i = 0; i < size; i++){",
                  "        str += random_character();",
                  "    }",
                  "    return str;",
                  "}",
                  "function random_character() {",
                  "    var chars = \"0123456789abcdefghijklmnopqurstuvwxyzABCDEFGHIJKLMNOPQURSTUVWXYZ\";",
                  "    return chars.substr( Math.floor(Math.random() * 62), 1);",
                  "}",
                  "",
                  "",
                  "var first_name = random_string(20);",
                  "var last_name = random_string(20);",
                  "",
                  "postman.setEnvironmentVariable(\"first_name\", first_name);",
                  "postman.setEnvironmentVariable(\"last_name\", last_name);",
                  "",
                  "",
                  "var start = new Date().getTime();",
                  "postman.setEnvironmentVariable(\"start_time\", start);",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"first_name\": \"{{first_name}}\",\n    \"last_name\": \"{{last_name}}\",\n    \"grade_records\": [\n        {\n            \"subject_name\": \"{{subject_name_1}}\",\n            \"grade\": {{grade_1}}\n        },\n        {\n            \"subject_name\": \"{{subject_name_2}}\",\n            \"grade\": {{grade_2}}\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/student",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "student"
              ]
            }
          },
          "response": [
            {
              "name": "Invalid input",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"student_id\": 0,\n    \"last_name\": \"last_name\",\n    \"grades\": {\n        \"key\": \"grades\"\n    },\n    \"first_name\": \"first_name\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/student",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student"
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"student_id\": 0,\n    \"last_name\": \"last_name\",\n    \"grades\": {\n        \"key\": \"grades\"\n    },\n    \"first_name\": \"first_name\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/student",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "\"<string>\""
            }
          ]
        },
        {
          "name": "10.Add a new random student",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "function random_string(size){",
                  "    var str = \"\";",
                  "    for (var i = 0; i < size; i++){",
                  "        str += random_character();",
                  "    }",
                  "    return str;",
                  "}",
                  "function random_character() {",
                  "    var chars = \"0123456789abcdefghijklmnopqurstuvwxyzABCDEFGHIJKLMNOPQURSTUVWXYZ\";",
                  "    return chars.substr( Math.floor(Math.random() * 62), 1);",
                  "}",
                  "",
                  "",
                  "var first_name = random_string(20);",
                  "var last_name = random_string(20);",
                  "",
                  "postman.setEnvironmentVariable(\"first_name\", first_name);",
                  "postman.setEnvironmentVariable(\"last_name\", last_name);",
                  "",
                  "",
                  "var start = new Date().getTime();",
                  "postman.setEnvironmentVariable(\"start_time\", start);",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"first_name\": \"{{first_name}}\",\n    \"last_name\": \"{{last_name}}\",\n    \"grade_records\": [\n        {\n            \"subject_name\": \"{{subject_name_1}}\",\n            \"grade\": {{grade_1}}\n        },\n        {\n            \"subject_name\": \"{{subject_name_2}}\",\n            \"grade\": {{grade_2}}\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/student",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "student"
              ]
            }
          },
          "response": [
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"student_id\": 0,\n    \"last_name\": \"last_name\",\n    \"grades\": {\n        \"key\": \"grades\"\n    },\n    \"first_name\": \"first_name\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/student",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "\"<string>\""
            },
            {
              "name": "Invalid input",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"student_id\": 0,\n    \"last_name\": \"last_name\",\n    \"grades\": {\n        \"key\": \"grades\"\n    },\n    \"first_name\": \"first_name\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/student",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student"
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "11.Add existing",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"first_name\": \"{{first_name}}\",\n    \"last_name\": \"{{last_name}}\",\n    \"grade_records\": [\n        {\n            \"subject_name\": \"{{subject_name_1}}\",\n            \"grade\": {{grade_1}}\n        },\n        {\n            \"subject_name\": \"{{subject_name_2}}\",\n            \"grade\": {{grade_2}}\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/student",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "student"
              ]
            }
          },
          "response": [
            {
              "name": "Invalid input",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"student_id\": 0,\n    \"last_name\": \"last_name\",\n    \"grades\": {\n        \"key\": \"grades\"\n    },\n    \"first_name\": \"first_name\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/student",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student"
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"student_id\": 0,\n    \"last_name\": \"last_name\",\n    \"grades\": {\n        \"key\": \"grades\"\n    },\n    \"first_name\": \"first_name\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/student",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "student"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "\"<string>\""
            }
          ]
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "type": "string"
    }
  ]
}